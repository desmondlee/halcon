<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>常见问题 on Halcon学习</title>
    <link>http://halcon.lizhenguo.cn/posts/</link>
    <description>Recent content in 常见问题 on Halcon学习</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://halcon.lizhenguo.cn/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>技术学习要点推荐</title>
      <link>http://halcon.lizhenguo.cn/posts/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90/</link>
      <pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/posts/%E6%8A%80%E6%9C%AF%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90/</guid>
      <description>技术学习要点推荐 #  软件开发-C# #  1. 控件使用(Button, TextBox, Label, tableLayoutPanel等) #  2. 文件读写 #  图象算法-Halcon #  1. 读取图象文件 #  2. blob分析 #  3. 几何定位 #  4. 形态学处理 #  5. 仿射变换 #  6. 尺寸测量 #  7. 连接相机 #  图象标注软件使用-LabelImg #   软件的安装 矩形框标注，新增、修改框的大小、编辑分类标签  数据库-Sqlite/Mysql #  1. 数据库连接 #  2. 增删改查 #  库、表、列 主键、索引
进阶-软件开发-Python #  进阶-图象算法-OpenCV #  可以用Python语言开发 内容类似Halcon</description>
    </item>
    
    <item>
      <title>border_shape_models</title>
      <link>http://halcon.lizhenguo.cn/posts/border_shape_models/</link>
      <pubDate>Tue, 19 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/posts/border_shape_models/</guid>
      <description>形状模板可能与图像边缘相交，为了确保在这种情况下也能定位到，需要开启该功能：
set_system(&#39;border_shape_models&#39;, &#39;true&#39;)</description>
    </item>
    
    <item>
      <title>Halcon描述有错误的算子</title>
      <link>http://halcon.lizhenguo.cn/posts/halcon%E6%8F%8F%E8%BF%B0%E6%9C%89%E9%94%99%E8%AF%AF%E7%9A%84%E7%AE%97%E5%AD%90/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/posts/halcon%E6%8F%8F%E8%BF%B0%E6%9C%89%E9%94%99%E8%AF%AF%E7%9A%84%E7%AE%97%E5%AD%90/</guid>
      <description>1. hom_mat2d_translate #  定义： hom_mat2d_translate( : : HomMat2D, Tx, Ty : HomMat2DTranslate)
错误：Tx, Ty反了，应该是hom_mat2d_translate( : : HomMat2D, Ty, Tx : HomMat2DTranslate)
2. affine_trans_point_2d #  定义：affine_trans_point_2d( : : HomMat2D, Px, Py : Qx, Qy)
错误：Px, Py反了，Qx, Qy反了，应该是affine_trans_point_2d( : : HomMat2D, Py, Px : Qy, Qx)	
综上，Halcon算子中，总是先用y坐标(Row)， 再用x坐标(Column)</description>
    </item>
    
    <item>
      <title>Halcon算子文档</title>
      <link>http://halcon.lizhenguo.cn/posts/halcon%E7%AE%97%E5%AD%90%E6%96%87%E6%A1%A3/</link>
      <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/posts/halcon%E7%AE%97%E5%AD%90%E6%96%87%E6%A1%A3/</guid>
      <description>每个算子的定义，都是由三个 冒号 : 分割的4组参数，分别表示 图形输入参数 : 图形输出参数：控制变量输入参数：控制变量输出参数</description>
    </item>
    
    <item>
      <title>System.InvalidOperationException:线程间操作无效: 从不是创建控件 ** 的线程访问它。</title>
      <link>http://halcon.lizhenguo.cn/posts/%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3/</link>
      <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/posts/%E7%BA%BF%E7%A8%8B%E7%9B%B8%E5%85%B3/</guid>
      <description>在使用Thread 多线程时，线程间不能跨线程访问其他线程的控件。
如，主线程创建了某个label控件，子线程不能直接访问该控件，若想访问，则可以在Form窗体初始化函数中设置CheckForIllegalCrossThreadCalls = false， 否则会报以下类似的错误：&amp;quot;System.InvalidOperationException:线程间操作无效: 从不是创建控件 ** 的线程访问它。&amp;quot;
MSDN参考连接</description>
    </item>
    
    <item>
      <title>图形类型数组VS控制类型数组</title>
      <link>http://halcon.lizhenguo.cn/posts/%E5%9B%BE%E5%BD%A2%E7%B1%BB%E5%9E%8B%E6%95%B0%E7%BB%84vs%E6%8E%A7%E5%88%B6%E7%B1%BB%E5%9E%8B%E6%95%B0%E7%BB%84/</link>
      <pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/posts/%E5%9B%BE%E5%BD%A2%E7%B1%BB%E5%9E%8B%E6%95%B0%E7%BB%84vs%E6%8E%A7%E5%88%B6%E7%B1%BB%E5%9E%8B%E6%95%B0%E7%BB%84/</guid>
      <description>  图像类型数组，下标从1开始，且只能通过算子(select_obj)一个个读取；
  控制类型数组，下标从0开始，可以通过数字下标 Arr[index] 形式来读取。
  </description>
    </item>
    
    <item>
      <title>几何定位&amp;Blob分析</title>
      <link>http://halcon.lizhenguo.cn/posts/%E5%87%A0%E4%BD%95%E5%AE%9A%E4%BD%8Dblob%E5%88%86%E6%9E%90/</link>
      <pubDate>Sat, 02 Jan 2021 01:25:15 +0800</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/posts/%E5%87%A0%E4%BD%95%E5%AE%9A%E4%BD%8Dblob%E5%88%86%E6%9E%90/</guid>
      <description>都是“判定有无” （判断图像中是否存在目标区域）的方法。
  几何定位是通过(模板)轮廓等几何特征匹配，来判断图像中是否存在目标区域；
  Blob分析是通过灰度值、特征值(如面积)等方式筛选，来判断图像中是否存在目标区域。
  灰度定位(Blob)与几何(轮廓)定位对比:
      对非线性光照变化，对物体灰度非线性变化的适应性 对缩放的适应性 对旋转的适应性 对物体遮挡、缺失的适应性 时间     灰度定位 差 差 差 差 短   几何(轮廓)定位 好 好 好 好 长    </description>
    </item>
    
    <item>
      <title>Windows下的快捷键</title>
      <link>http://halcon.lizhenguo.cn/posts/hotkeys/</link>
      <pubDate>Thu, 24 Dec 2020 22:32:06 +0800</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/posts/hotkeys/</guid>
      <description>快捷键 #   F2: 重置程序执行，停止执行程序，清零所有变量； F3: 取消注释所在行； F4: 注释所在行； F5: 运行程序(遇到断点会暂停)； F6: 单步步过执行(不进入自定义函数内部)； F7: 单步步入执行，会进入自定义函数内部(内置函数除外)； F8: 步过执行完成当前函数，到前一个函数后面； F9: 停止执行； F10: 给当前行加断点。 使用灰度直方图时，按ctrl键，鼠标放在图像上可以到看灰度值。  </description>
    </item>
    
    <item>
      <title>使用相对路径加载图像</title>
      <link>http://halcon.lizhenguo.cn/posts/relative_path/</link>
      <pubDate>Thu, 24 Dec 2020 22:32:06 +0800</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/posts/relative_path/</guid>
      <description>好处 #  共享程序文件给他人时，不用严格按照原有的绝对路径存储图像，方便使用。
位置 #  read_image可以将hdev文件所在目录，作为相对路径起始位置。</description>
    </item>
    
    <item>
      <title>draw_rectangle2中的length1和length2区别</title>
      <link>http://halcon.lizhenguo.cn/posts/draw_rectangle2%E4%B8%AD%E7%9A%84length1%E5%92%8Clength2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/posts/draw_rectangle2%E4%B8%AD%E7%9A%84length1%E5%92%8Clength2/</guid>
      <description>Length1 表示主半轴，即箭头指示方向，或angle角度方向。
示例代码：
gen_rectangle2 (Rectangle1, 300, 200, rad(45), 100, 20)示例图像：</description>
    </item>
    
  </channel>
</rss>
