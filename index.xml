<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>图像处理 on Halcon学习</title>
    <link>http://halcon.lizhenguo.cn/</link>
    <description>Recent content in 图像处理 on Halcon学习</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Dec 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://halcon.lizhenguo.cn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>基础算子(方法函数)</title>
      <link>http://halcon.lizhenguo.cn/docs/%E5%9F%BA%E7%A1%80%E7%AE%97%E5%AD%90%E6%96%B9%E6%B3%95%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/%E5%9F%BA%E7%A1%80%E7%AE%97%E5%AD%90%E6%96%B9%E6%B3%95%E5%87%BD%E6%95%B0/</guid>
      <description>基础算子(方法函数) #  图片 #   read_image write_image dump_window dump_window_image draw_rectangle   draw 和 gen 的区别 draw 绘制 产生的点位 是控制类型变量 方便存储和读写 gen 生产 产生是图像 是图像控制变量 方便查看
 数组 #   tuple_concat tuple_find tuple_regexp_select  资源句柄 #   dev_get_window  区域计算 #   union different intersection complement  字体 #   query_font get_font set_font  </description>
    </item>
    
    <item>
      <title>重要算子</title>
      <link>http://halcon.lizhenguo.cn/docs/%E9%87%8D%E8%A6%81%E7%AE%97%E5%AD%90/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/%E9%87%8D%E8%A6%81%E7%AE%97%E5%AD%90/</guid>
      <description>重要算子 #   get_region_xxx: 获取区域点组； get_contour_xld: 获取xld点组； area_center: 求区域面积 intensity: shape_trans: 区域形状变换 smallest_xxx: 求区域或xld的最小外接圆  </description>
    </item>
    
    <item>
      <title>read_image</title>
      <link>http://halcon.lizhenguo.cn/docs/image/operators/read_image/</link>
      <pubDate>Thu, 24 Dec 2020 22:59:03 +0800</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/image/operators/read_image/</guid>
      <description>read_image #  加载图像到halcon</description>
    </item>
    
    <item>
      <title>灰度直方图</title>
      <link>http://halcon.lizhenguo.cn/docs/image/operators/%E7%81%B0%E5%BA%A6%E7%9B%B4%E6%96%B9%E5%9B%BE/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/image/operators/%E7%81%B0%E5%BA%A6%E7%9B%B4%E6%96%B9%E5%9B%BE/</guid>
      <description>借助灰度直方图创建threshold代码 #  发音：ˈθreʃhəʊld
阈值 (不是_阀值_)又叫临界值，是指一个效应能够产生的最低值或最高值。此一名词广泛用于各方面，包括建筑学、生物学、飞行、化学、电信、电学、心理学等，如生态阈值。（摘自百度百科）
前提 #  需要将通过read_image读取图像得到的Image类型变量作为参数。
使用方式 #   通过read_image 读取图像； 打开灰度直方图，并勾选 阈值选项； 调整绿线和红线，勾勒出目标物； 点击插入代码。  参考图 #  </description>
    </item>
    
    <item>
      <title>流程</title>
      <link>http://halcon.lizhenguo.cn/docs/image/procedure/</link>
      <pubDate>Thu, 24 Dec 2020 22:59:03 +0800</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/image/procedure/</guid>
      <description>流程 #   mermaid.initialize({ &#34;flowchart&#34;: { &#34;useMaxWidth&#34;:true }, &#34;theme&#34;: &#34;default&#34; } ) graph TD A[采集图像] -- B{有无判定, Blob/定位} B -- |有| C[获得位置,角度信息] B -- |无| A C -- D[仿射变换, 求变换句柄, ROI变换] D -- E[图像预处理] E -- F[图像处理] F -- G[结果输出] </description>
    </item>
    
    <item>
      <title>连通性操作connection</title>
      <link>http://halcon.lizhenguo.cn/docs/image/operators/%E8%BF%9E%E9%80%9A%E6%80%A7%E6%93%8D%E4%BD%9Cconnection/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/image/operators/%E8%BF%9E%E9%80%9A%E6%80%A7%E6%93%8D%E4%BD%9Cconnection/</guid>
      <description>连通性操作connection #  作用 #  将整体目标拆分成多个独立目标。
前提 #  需要通过threshold标注出目标。
使用方式 #  命令connection (Regions, ConnectedRegions)。
其中，第一个参数 Regions是通过threshold得到的变量，第二个变量ConnectedRegions是connection算子的输出变量。
执行该命令后，包含在整张图像中的多个目标就被拆分成多个独立目标。(如果右键单击图像，彩色数量选择12，会发现每个独立的目标都被着上了不同的颜色)
参考图 #  </description>
    </item>
    
    <item>
      <title>特征直方图</title>
      <link>http://halcon.lizhenguo.cn/docs/image/operators/%E7%89%B9%E5%BE%81%E7%9B%B4%E6%96%B9%E5%9B%BE/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/image/operators/%E7%89%B9%E5%BE%81%E7%9B%B4%E6%96%B9%E5%9B%BE/</guid>
      <description>借助特征直方图创建select_shape代码 #  前提 #  先使用 connection 算子将图像上的一整个特征目标，拆分成多个特征目标。
使用方式 #   将connection 拆分出来的图像用同一种颜色标注(如用灰色)； 打开特征直方图，勾选area选项； 通过拖拽特征直方图上的绿线和红线，使只关注的目标被标注(着色)； 点击插入代码，即可在代码窗口得到对应的代码。如select_shape (ConnectedRegions, SelectedRegions1, &#39;area&#39;, &#39;and&#39;, 28077.7, 50000)  参考图 #  </description>
    </item>
    
    <item>
      <title>图像分割</title>
      <link>http://halcon.lizhenguo.cn/docs/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2/</guid>
      <description>图像分割 #  threshold #  直接阈值分割。适用于环境稳定，目标和背景存在明显的灰度差的场合。阈值一般可以通过灰度直方图来确定。
binary_threshold #  自动全局阈值分割。适用于目标物体和背景之间存在明显的灰度差的场合。
在直方图中会有明显的两个波峰：一个是目标物体，另一个是背景。如果有多个波峰，算子通过平滑灰度直方图，自动找到两个波峰之间的最小值，输出灰度值在0到最小值之间的像素点构成暗的区域。
auto_threshold #  多阈值分割。根据多个波峰分割出多个独立的区域。
dyn_threshold #  基于参考图像(由原图进行滤波得到)的动态阈值分割。
var_threshold #  基于结构元素，使用局部均值和标准偏差分析分割图像。
 dyn_threshold 和 var_threshold的适用场合：
1）对于一些应用来说，无法通过一个全局阈值进行分割：图像的背景是非均匀的；
2）物体在局部范围内通常比背景亮些或暗些。
 </description>
    </item>
    
    <item>
      <title>Blob</title>
      <link>http://halcon.lizhenguo.cn/docs/blob/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/blob/</guid>
      <description>Blob #  流程 #   采集图像(1. 本地图像；2.相机接口)(read_image) 图像分割(threshold) 形态学处理(closing_circle, medium_image, erosion, dilation) 连通性分析(region, connection) 填充(fill_up, fill_up_shape) 特征提取(直方图, 检测)(select_shape) 获取结果  描述 #    read_image
读取图片
  threshold
给目标物(如回形针)着色，从背景图中区分出
  closing_circle
给threhold着色时，没有着色的部分补充着色。(根据调整参数，尽可能让需要着色的空洞能着色，不需要着色的部分不会被着色)
  connection:
  ​	将多个目标物(如回形针)组成的一个整体切割成多个(数组)，得到回形针数组
  fill_up_shape
根据自定义的特征进行填充
  select_shape
缩小目标范围，去除不相干内容
  area_center
  dev_desplay
展示指定的图像
  备注 #   图像类型数组，下标从1开始，且只能通过算子(select_obj)一个个读取  </description>
    </item>
    
    <item>
      <title>几何定位</title>
      <link>http://halcon.lizhenguo.cn/docs/%E5%87%A0%E4%BD%95%E5%AE%9A%E4%BD%8D/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/%E5%87%A0%E4%BD%95%E5%AE%9A%E4%BD%8D/</guid>
      <description>几何定位 #  灰度定位(Blob)与几何(轮廓)定位对比 #      对非线性光照变化，对物体灰度非线性变化的适应性 对缩放的适应性 对旋转的适应性 对物体遮挡、缺失的适应性 时间     灰度定位 差 差 差 差 短   几何(轮廓)定位 好 好 好 好 长    </description>
    </item>
    
    <item>
      <title>图像预处理</title>
      <link>http://halcon.lizhenguo.cn/docs/%E5%9B%BE%E5%83%8F%E9%A2%84%E5%A4%84%E7%90%86/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/%E5%9B%BE%E5%83%8F%E9%A2%84%E5%A4%84%E7%90%86/</guid>
      <description>图像预处理 #     对噪声的处理效果 对边缘的处理效果 效率     平滑滤波 弱化噪声 模糊边缘   中值滤波 去除噪声 保持边缘    滤波 #  针对有早点的图像进行平滑，可以减弱或消除噪点 read_image media_image
锐化 #  对图像边缘进行对比度提升使用，可以让图像轮廓更清晰 sobel_amp frei_amp
增强 #  emphasize
形态学 #   腐蚀, erosion 膨胀, dilation  骨架 #  skeleton</description>
    </item>
    
    <item>
      <title>常用标定</title>
      <link>http://halcon.lizhenguo.cn/docs/%E5%B8%B8%E7%94%A8%E6%A0%87%E5%AE%9A/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/%E5%B8%B8%E7%94%A8%E6%A0%87%E5%AE%9A/</guid>
      <description>常用标定 #   像素变换(圆、矩形、像素单量)； 透视投影及光学畸变校正； 不同坐标系之间的标定(三点确定一个坐标系)：如九点标定(机械手) 多个相机通过标定统一到同一个坐标系  </description>
    </item>
    
    <item>
      <title>list_files</title>
      <link>http://halcon.lizhenguo.cn/docs/image/operators/list_files/</link>
      <pubDate>Thu, 24 Dec 2020 22:59:03 +0800</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/image/operators/list_files/</guid>
      <description>列举文件 #  </description>
    </item>
    
    <item>
      <title>orientation</title>
      <link>http://halcon.lizhenguo.cn/docs/image/operators/orientation/</link>
      <pubDate>Thu, 24 Dec 2020 22:59:03 +0800</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/image/operators/orientation/</guid>
      <description>orientation #  </description>
    </item>
    
    <item>
      <title>select_shape</title>
      <link>http://halcon.lizhenguo.cn/docs/image/operators/select_shape/</link>
      <pubDate>Thu, 24 Dec 2020 22:59:03 +0800</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/docs/image/operators/select_shape/</guid>
      <description>select_shape #  </description>
    </item>
    
    <item>
      <title>Windows下的快捷键</title>
      <link>http://halcon.lizhenguo.cn/posts/hotkeys/</link>
      <pubDate>Thu, 24 Dec 2020 22:32:06 +0800</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/posts/hotkeys/</guid>
      <description>快捷键 #   F2: 重置程序执行，停止执行程序，清零所有变量； F3: 取消注释所在行； F4: 注释所在行； F5: 运行程序(遇到断点会暂停)； F6: 单步步过执行(不进入自定义函数内部)； F7: 单步步入执行，会进入自定义函数内部(内置函数除外)； F8: 步过执行完成当前函数，到前一个函数后面； F9: 停止执行； F10: 给当前行加断点。 使用灰度直方图时，按ctrl键，鼠标放在图像上可以到看灰度值。  </description>
    </item>
    
    <item>
      <title>使用相对路径加载图像</title>
      <link>http://halcon.lizhenguo.cn/posts/relative_path/</link>
      <pubDate>Thu, 24 Dec 2020 22:32:06 +0800</pubDate>
      
      <guid>http://halcon.lizhenguo.cn/posts/relative_path/</guid>
      <description>好处 #  共享程序文件给他人时，不用严格按照原有的绝对路径存储图像，方便使用。
位置 #  read_image可以将hdev文件所在目录，作为相对路径起始位置。</description>
    </item>
    
  </channel>
</rss>